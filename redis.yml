---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: redis-volume
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 2Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/srv/k8s_data/redis"
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: redis-claim
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
---
apiVersion: v1
kind: Pod
metadata:
  labels:
    name: redis
    redis-sentinel: "true"
    role: master
  name: redis
spec:
  containers:
    - name: master
      image: k8s.gcr.io/redis:v1
      env:
        - name: MASTER
          value: "true"
      ports:
        - containerPort: 6379
      resources:
        limits:
          cpu: "0.1"
      volumeMounts:
        - mountPath: /redis-master-data
          name: redis-storage
    - name: sentinel
      image: k8s.gcr.io/redis:v1
      env:
        - name: SENTINEL
          value: "true"
      ports:
        - containerPort: 26379
  volumes:
    - name: redis-storage
      persistentVolumeClaim:
        claimName: redis-claim
---
kind: Service
apiVersion: v1
metadata:
  name: redis
  labels:
    app: redis
spec:
  selector:
    app: redis
  type: LoadBalancer
  ports:
  - protocol: TCP
    port: 6379
  externalIPs:
  - 10.233.56.41
